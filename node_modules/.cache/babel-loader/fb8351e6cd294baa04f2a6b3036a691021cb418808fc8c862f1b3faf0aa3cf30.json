{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marci\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Question from \"./Components/Question\";\nimport Split from \"react-split\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [data, setData] = React.useState(null);\n  const [selectedAnswers, setSelectedAnswers] = React.useState([]);\n  const [result, setResult] = React.useState('');\n  const [allAnswersChecked, setAllAnswersChecked] = React.useState(false);\n  const [checked, setChecked] = React.useState(false);\n  const [start, setStart] = React.useState(false);\n  function createNewNote() {\n    setStart(true);\n  }\n  React.useEffect(() => {\n    fetch(`https://opentdb.com/api.php?amount=5&type=multiple`).then(res => res.json()).then(data => setData(data));\n  }, []);\n  function handleSelection(answer, que) {\n    setSelectedAnswers(prevState => [...prevState.filter(item => item[1] !== que), [answer, que]]);\n  }\n  function checkAnswers() {\n    let correctAnswers = 0;\n    selectedAnswers.forEach(selectedAnswer => {\n      data.results.forEach(question => {\n        if (decodeHtml(question.correct_answer) === decodeHtml(selectedAnswer[0])) {\n          correctAnswers += 1;\n        }\n      });\n    });\n    setResult(`${correctAnswers}/${data.results.length}`);\n    setAllAnswersChecked(true);\n    setChecked(true);\n  }\n  function handlePlayAgain() {\n    setData(null);\n    setSelectedAnswers([]);\n    setResult(\"\");\n    setAllAnswersChecked(false);\n    setChecked(false);\n    fetch(`https://opentdb.com/api.php?amount=5&type=multiple`).then(res => res.json()).then(data => setData(data));\n  }\n  function decodeHtml(html) {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n  if (data === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: start ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [3000, 700],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [data && data.results.map(prevState => /*#__PURE__*/_jsxDEV(Question, {\n          que: decodeHtml(prevState.question),\n          answer1: decodeHtml(prevState.correct_answer),\n          answer2: decodeHtml(prevState.incorrect_answers[0]),\n          answer3: decodeHtml(prevState.incorrect_answers[1]),\n          answer4: decodeHtml(prevState.incorrect_answers[2]),\n          correct: decodeHtml(prevState.correct_answer),\n          onAnswerSelected: handleSelection,\n          timeForGreen: allAnswersChecked,\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results\",\n          children: [checked && /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"scoreBtn\",\n            children: [\"You scored \", result, \" correct answers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 24\n          }, this), checked ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"newCheckButton\",\n            onClick: handlePlayAgain,\n            children: \"Play Again?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"checkButton\",\n            onClick: checkAnswers,\n            children: \"Check answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"startBtn\",\n        children: \"Quizzical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Start quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"1gjiAytRn/NwZppKvjmdStOMCmA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Question","Split","jsxDEV","_jsxDEV","App","_s","data","setData","useState","selectedAnswers","setSelectedAnswers","result","setResult","allAnswersChecked","setAllAnswersChecked","checked","setChecked","start","setStart","createNewNote","useEffect","fetch","then","res","json","handleSelection","answer","que","prevState","filter","item","checkAnswers","correctAnswers","forEach","selectedAnswer","results","question","decodeHtml","correct_answer","length","handlePlayAgain","html","txt","document","createElement","innerHTML","value","className","fileName","_jsxFileName","lineNumber","columnNumber","children","sizes","direction","map","answer1","answer2","incorrect_answers","answer3","answer4","correct","onAnswerSelected","timeForGreen","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marci/quiz/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport Question from \"./Components/Question\"\r\nimport Split from \"react-split\"\r\n\r\nexport default function App(){\r\n    const [data, setData] = React.useState(null);\r\n    const [selectedAnswers, setSelectedAnswers] = React.useState([]);\r\n    const [result, setResult] = React.useState('');\r\n    const [allAnswersChecked, setAllAnswersChecked] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(false)\r\n    const [start,setStart] = React.useState(false)\r\n    function createNewNote(){\r\n      setStart(true)\r\n    }\r\n    React.useEffect(() => {\r\n        \r\n        \r\n        fetch(`https://opentdb.com/api.php?amount=5&type=multiple`)\r\n            .then(res => res.json())\r\n            .then(data =>setData(data))\r\n    }, [])\r\n    \r\n    function handleSelection(answer, que) {\r\n      setSelectedAnswers(prevState => [\r\n        ...prevState.filter(item => item[1] !== que),\r\n        [answer, que]\r\n      ])\r\n      \r\n    }\r\n    \r\n    function checkAnswers() {\r\n      let correctAnswers = 0;\r\n      \r\n      selectedAnswers.forEach((selectedAnswer) => {\r\n        data.results.forEach((question) => {\r\n          if (decodeHtml(question.correct_answer) === decodeHtml(selectedAnswer[0])) {\r\n            correctAnswers += 1;\r\n          }\r\n        });\r\n      });\r\n      \r\n      setResult(`${correctAnswers}/${data.results.length}`);\r\n      setAllAnswersChecked(true);\r\n      setChecked(true);\r\n    }\r\n    \r\n    function handlePlayAgain() {\r\n      setData(null)\r\n      setSelectedAnswers([]);\r\n      setResult(\"\");\r\n      setAllAnswersChecked(false);\r\n      setChecked(false);\r\n      fetch(`https://opentdb.com/api.php?amount=5&type=multiple`)\r\n        .then((res) => res.json())\r\n        .then((data) => setData(data));\r\n    }\r\n    function decodeHtml(html) {\r\n      var txt = document.createElement(\"textarea\");\r\n      txt.innerHTML = html;\r\n      return txt.value;\r\n    }\r\n    if (data === null) return <div className=\"loader\"></div>\r\n\r\n    return (\r\n      <main>\r\n      {start\r\n        ?\r\n        <Split \r\n        sizes={[3000, 700]} \r\n        direction=\"horizontal\" \r\n        className=\"split\">\r\n          <div>\r\n            {data && data.results.map(prevState => (\r\n              <Question \r\n                  \r\n                  que={decodeHtml(prevState.question)}\r\n                  answer1={decodeHtml(prevState.correct_answer)}\r\n                  answer2={decodeHtml(prevState.incorrect_answers[0])}\r\n                  answer3={decodeHtml(prevState.incorrect_answers[1])}\r\n                  answer4={decodeHtml(prevState.incorrect_answers[2])}\r\n                  correct={decodeHtml(prevState.correct_answer)}\r\n                  onAnswerSelected={handleSelection}\r\n                  timeForGreen = {allAnswersChecked}\r\n                  checked = {checked}\r\n              />\r\n            ))}\r\n            <div className=\"results\">\r\n            {checked &&<h3 className=\"scoreBtn\">You scored {result} correct answers</h3>}\r\n            {checked ? (\r\n              <button className=\"newCheckButton\" onClick={handlePlayAgain}>Play Again?</button>\r\n            ) : (\r\n              <button className=\"checkButton\" onClick={checkAnswers}>Check answers</button>\r\n            )}\r\n            </div>\r\n          </div>\r\n          </Split>\r\n          :\r\n          <div className=\"no-notes\">\r\n            <h1 className=\"startBtn\">Quizzical</h1>\r\n            \r\n            <button \r\n                className=\"first-note\" \r\n                onClick={createNewNote}\r\n            >\r\n                Start quiz\r\n            </button>\r\n          </div>\r\n      }\r\n      </main>\r\n\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}