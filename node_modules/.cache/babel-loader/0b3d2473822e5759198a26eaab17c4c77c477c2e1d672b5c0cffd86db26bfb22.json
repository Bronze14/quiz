{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marci\\\\quiz\\\\src\\\\Components\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n  const id = nanoid();\n  const [answers, setAnswers] = React.useState([props.answer1, props.answer2, props.answer3, props.answer4]);\n  const [shuffledAnswers, setShuffledAnswers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const [isCorrect, setIsCorrect] = React.useState(null);\n  React.useEffect(() => {\n    setShuffledAnswers(answers.sort(() => Math.random() - 0.5));\n  }, [answers]);\n  React.useEffect(() => {\n    if (selected !== null) {\n      setIsCorrect(shuffledAnswers[selected] === props.correct);\n    }\n  }, [selected, shuffledAnswers, props.correct]);\n  function handleClick(answer, index) {\n    if (!props.checked) {\n      setSelected(index);\n      props.onAnswerSelected(answer, props.que);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainComp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"questionButton\",\n      children: decodeURIComponent(props.que)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: shuffledAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"answerButton\",\n        style: {\n          backgroundColor: props.timeForGreen === true && shuffledAnswers[index] === props.correct ? \"#94D7A2\" : index === selected && isCorrect === false && props.checked ? \"#FFB5B5\" : index === selected ? \"#D6DBF5\" : \"white\",\n          border: index === selected ? \"1px solid #D6DBF5\" : \"1px solid #4D5B9E\"\n        },\n        onClick: () => handleClick(answer, index),\n        children: decodeURIComponent(answer)\n      }, `${id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"Dgd68tCUXriCpSQJQbnlC1ze6Z8=\");\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","nanoid","jsxDEV","_jsxDEV","Question","props","_s","id","answers","setAnswers","useState","answer1","answer2","answer3","answer4","shuffledAnswers","setShuffledAnswers","selected","setSelected","isCorrect","setIsCorrect","useEffect","sort","Math","random","correct","handleClick","answer","index","checked","onAnswerSelected","que","className","children","decodeURIComponent","fileName","_jsxFileName","lineNumber","columnNumber","map","style","backgroundColor","timeForGreen","border","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marci/quiz/src/Components/Question.js"],"sourcesContent":["import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function Question(props) {\r\n  const id = nanoid();\r\n  const [answers, setAnswers] = React.useState([props.answer1, props.answer2, props.answer3, props.answer4]);\r\n  const [shuffledAnswers, setShuffledAnswers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n  const [isCorrect, setIsCorrect] = React.useState(null);\r\n  \r\n  \r\n  React.useEffect(() => {\r\n    setShuffledAnswers(answers.sort(() => Math.random() - 0.5));\r\n  }, [answers]);\r\n\r\n  React.useEffect(() => {\r\n    if (selected !== null) {\r\n      setIsCorrect(shuffledAnswers[selected] === props.correct);\r\n    }\r\n  }, [selected, shuffledAnswers, props.correct]);\r\n\r\n  function handleClick(answer, index) {\r\n    if (!props.checked ) {\r\n      setSelected(index);\r\n      props.onAnswerSelected(answer,props.que);\r\n      \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"mainComp\" key={id}>\r\n      <h6 className=\"questionButton\">{decodeURIComponent(props.que)}</h6>\r\n\r\n      <div>\r\n        {shuffledAnswers.map((answer, index) => (\r\n          <button\r\n          className=\"answerButton\"\r\n          key={`${id}-${index}`}\r\n          style={{  \r\n            backgroundColor: props.timeForGreen === true && shuffledAnswers[index] === props.correct ? \"#94D7A2\" :  \r\n              index === selected && isCorrect === false && props.checked ? \"#FFB5B5\" : \r\n              index === selected ? \"#D6DBF5\" : \"white\",\r\n            border: index === selected ? \"1px solid #D6DBF5\" : \"1px solid #4D5B9E\"\r\n          }}\r\n          onClick={() => handleClick(answer,index)}\r\n        >\r\n          {decodeURIComponent(answer)}\r\n\r\n        </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}